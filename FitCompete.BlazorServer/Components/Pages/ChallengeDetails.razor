@page "/challenges/{ChallengeId:int}"
@inject IChallengeHttpService AppService
@inject NavigationManager NavigationManager

<PageTitle>Szczegóły Wyzwania</PageTitle>

@if (_challenge == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudPaper Class="pa-4 mb-4">
        <div class="d-flex justify-space-between">
            <div>
                <MudText Typo="Typo.h3">@_challenge.Name</MudText>
                <MudText Typo="Typo.subtitle1" Color="Color.Secondary">Kategoria: @_challenge.CategoryName</MudText>
            </div>
            <MudButton Href="@($"/challenges/{ChallengeId}/attempt")" Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.PlayArrow" Style="height: fit-content;">Podejmij Wyzwanie</MudButton>
        </div>
    </MudPaper>

    <MudCard><MudCardContent><MudText>@_challenge.Description</MudText></MudCardContent></MudCard>

    <MudText Typo="Typo.h5" Class="mt-6 mb-2">Ranking</MudText>
    <MudTable Items="@_ranking" Hover="true" Dense="true">
        <HeaderContent>
            <MudTh>Miejsce</MudTh>
            <MudTh>Użytkownik</MudTh>
            <MudTh>Wynik (@_challenge.UnitOfMeasure)</MudTh>
            <MudTh>Data</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@(_ranking.ToList().IndexOf(context) + 1)</MudTd>
            <MudTd>@context.UserName</MudTd>
            <MudTd>@context.ResultValue</MudTd>
            <MudTd>@context.AttemptDate.ToShortDateString()</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    [Parameter] public int ChallengeId { get; set; }

    private ChallengeDto? _challenge;
    private IEnumerable<RankingEntryDto>? _ranking;

    protected override async Task OnInitializedAsync()
    {
        _challenge = await AppService.GetChallengeByIdAsync(ChallengeId);
        _ranking = await AppService.GetRankingAsync(ChallengeId);
    }
}